{
  "hash": "1228734747e30ecb87a667a783bbcde8",
  "result": {
    "markdown": "\n# 그래프 테마\n\n`ggplot2`에 기본으로 제공되는 `theme`이 9개가 있어, \n각 테마별로 시각화해보고 추후 가장 적합한 그래프를 선정한다.\n먼저, 각 테마를 달리 적용하여 비교할 수 있는 기본 `ggplot` 그래프를 준비한다.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\nbase_penguins_gg <- penguins |> \n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n    geom_point(aes(color = species, shape = species), size = 3) +\n    geom_smooth(method = \"lm\", se = FALSE, color = \"black\")  +\n    labs(\n      title = \"기본 테마\",\n      subtitle = \"물갈퀴 길이와 체중 회귀분석\",\n      x = \"물갈퀴 길이 (mm)\",\n      y = \"체중 (g)\",\n      color = \"펭귄종\",\n    ) +\n    guides(shape = \"none\") +\n    theme(legend.position = c(0.90, 0.15))\n\nbase_penguins_gg\n```\n\n::: {.cell-output-display}\n![](themes_ggplot_files/figure-html/ggplot_base-1.png){width=672}\n:::\n:::\n\n\n펭귄 데이터셋을 사용하여 물갈퀴 길이와 체중 사이의 관계를 시각화하는 그래프를 \n`draw_themes()` 함수로 테마를 달리 적용하여 `ggplot` 그래프를 생성한 후에\n리스트 객체로 저장한다.\n\n다양한 테마를 `draw_themes()` 함수에 인자로 넘기기 위해 `themes_name`과 `themes_vector`에 테마명과 테마 함수를 저장장 한 후  `map2()` 함수로 테마를 달리한 `ggplot` 그래프를 저장한다. 마지막으로, `patchwork::wrap_plots()` 함수를 사용하여 모든 그래프를 결합하여 하나의 그래프로 출력한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndraw_themes <- function(theme_name, theme_choice) {\n  penguins |> \n    ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n      geom_point(aes(color = species, shape = species), size = 1) +\n      geom_smooth(method = \"lm\", se = FALSE, color = \"black\")  +\n      labs(\n        title = theme_name,\n        subtitle = \"물갈퀴 길이와 체중 회귀분석\",\n        x = \"물갈퀴 길이 (mm)\",\n        y = \"체중 (g)\",\n        color = \"펭귄종\",\n      ) +\n      guides(shape = \"none\") +\n      theme_choice() +\n      theme(legend.position = c(0.90, 0.15))    \n}\n\n## 테마명과 벡터\nthemes_name <- c(\"theme_gray\", \"theme_bw\", \"theme_linedraw\", \n                 \"theme_light\", \"theme_dark\", \"theme_minimal\", \"theme_classic\", \n                 \"theme_void\", \"theme_test\")\n\nthemes_vector <- c(theme_gray , theme_bw , theme_linedraw , \n                  theme_light , theme_dark , theme_minimal , theme_classic , \n                  theme_void , theme_test )\n\ntheme_output <- map2(themes_name, themes_vector, draw_themes)\n\npatchwork::wrap_plots(theme_output)\n```\n\n::: {.cell-output-display}\n![](themes_ggplot_files/figure-html/ggplot_theme-1.png){width=672}\n:::\n:::\n\n\n\n### `hrbrthemes`\n\n밥 루디스가 제작한 `hrbrthemes` 테마 패키지는 특히 텍스트가 많은 비즈니스 유형의 프레젠테이션에 적합한 테마와 테마 구성 요소를 제공한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(hrbrthemes)\n\nhrbr_themes_name <- c(\"theme_ipsum\", \"theme_ipsum_ps\", \"theme_ipsum_es\", \"theme_ipsum_rc\", \"theme_ipsum_ps\", \"theme_ipsum_pub\", \"theme_ipsum_tw\", \"theme_modern_rc\", \"theme_ft_rc\")\n\nhrbr_themes_vector <- c(theme_ipsum, theme_ipsum_ps, theme_ipsum_es, theme_ipsum_rc, theme_ipsum_ps, theme_ipsum_pub, theme_ipsum_tw, theme_modern_rc, theme_ft_rc)\n\nhrbr_theme_output <- map2(hrbr_themes_name, hrbr_themes_vector, draw_themes)\n\nhrbrtheme_gg <- patchwork::wrap_plots(hrbr_theme_output)\n\nggsave(\"images/hrbrtheme_gg.png\")\n```\n:::\n\n\n![](images/hrbrtheme_gg.png)\n\n\n### `ggthemes`\n\n제프리 아놀드(Jeffrey Arnold)가 제작한 `ggthemes` 테마 패키지는 소프트웨어, 데이터 시각화 선구자 및 다양한 곳에서 영감을 얻은 다양한 테마를 제공한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggthemes)\n\nggthemes_name <- c(\"theme_base()\",\"theme_calc()\",\"theme_clean()\",\"theme_economist()\", \"theme_economist_white()\",\"theme_excel()\",\"theme_excel_new()\",\"theme_few()\",\"theme_fivethirtyeight()\",\"theme_foundation()\",\"theme_gdocs()\",\"theme_hc()\",\"theme_igray()\",\"theme_map()\",\"theme_pander()\",\"theme_solarized_2()\",\"theme_solid()\",\"theme_stata()\",\"theme_tufte()\",\"theme_wsj()\")\n\nggthemes_vector <- c(theme_base, theme_calc, theme_clean, theme_economist, theme_economist_white, theme_excel, theme_excel_new, theme_few, theme_fivethirtyeight, theme_foundation, theme_gdocs, theme_hc, theme_igray, theme_map, theme_pander, theme_solarized_2, theme_solid, theme_stata, theme_tufte, theme_wsj)\n\nggtheme_output <- map2(ggthemes_name, ggthemes_vector, draw_themes)\n\npatchwork::wrap_plots(ggtheme_output)\n```\n\n::: {.cell-output-display}\n![](themes_ggplot_files/figure-html/ggplot_ggthemes-1.png){width=672}\n:::\n:::\n\n\n\n### `wesanderson`\n\n웨스 앤더슨(Wes Anderson) 영화의 독특하고 눈에 띄는 스타일을 기반으로 한 색상 팔레트를 제공하는 패키지다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(wesanderson)\n\ndraw_wesanderson <- function(palette_name, wesanderson_palette =\"Darjeeling1\") {\n  penguins |> \n    ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n      geom_point(aes(color = species, shape = species), size = 1) +\n      geom_smooth(method = \"lm\", se = FALSE, color = \"black\")  +\n      labs(\n        title = palette_name,\n        subtitle = \"물갈퀴 길이와 체중 회귀분석\",\n        x = \"물갈퀴 길이 (mm)\",\n        y = \"체중 (g)\",\n        color = \"펭귄종\",\n      ) +\n      guides(shape = \"none\") +\n      theme_minimal() +\n      theme(legend.position = c(0.90, 0.15)) +  \n      scale_color_manual(values= wes_palette(wesanderson_palette, n = 3))\n}\n\nwes_theme_output <- map2(names(wes_palettes), names(wes_palettes), draw_wesanderson)\n\npatchwork::wrap_plots(wes_theme_output)\n```\n\n::: {.cell-output-display}\n![](themes_ggplot_files/figure-html/ggplot_wesanderson-1.png){width=672}\n:::\n:::\n\n\n## 사용자 테마\n\n설치한 한글 글꼴과 색상을 매칭하여 사용자 맞춤 테마(`theme_penguin`)을 생성하고\n색상은 `wesanderson` 패키지에서 `Darjeeling1` 5가지 색상을 사용하여 시각화한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nextrafont::loadfonts(\"win\")\n\ntheme_penguin <- function() {\n  \n  # ggthemes::theme_tufte() +\n  theme_minimal() +\n    \n  theme(\n      plot.title     = element_text(family = \"NanumSquare\", size = 18, face = \"bold\"),\n      plot.subtitle  = element_text(family = \"MaruBuri\", size = 13),\n      axis.title.x   = element_text(family = \"MaruBuri\"),\n      axis.title.y   = element_text(family = \"MaruBuri\"),\n      axis.text.x    = element_text(family = \"MaruBuri\", size = 11),\n      axis.text.y    = element_text(family = \"MaruBuri\", size = 11),\n      legend.title   = element_text(family = \"MaruBuri\", size=13),\n      plot.caption   = element_text(family = \"NanumSquare\", color = \"gray20\")\n  )\n}\n\ndarjeeling1_palette <- wes_palette(\"Darjeeling1\", n = 5)\n\nggplot_penguins_gg <- penguins |> \n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n    geom_point(aes(color = species, shape = species), size = 3) +\n    geom_smooth(method = \"lm\", se = FALSE, color = \"black\")  +\n    labs(\n      title = \"물갈퀴 길이와 체중 회귀분석\",\n      subtitle = \"남극 파머 펭귄 데이터셋\",\n      x = \"물갈퀴 길이 (mm)\",\n      y = \"체중 (g)\",\n      color = \"펭귄종\",\n      caption = \"자료출처: palmerpenguins 패키지\"\n    ) +\n  guides(shape = \"none\") +\n  scale_color_manual(values =  darjeeling1_palette) +\n  theme_penguin()\n\nggplot_penguins_gg\n\nggsave(\"images/ggplot_penguins_gg.png\")\n```\n:::\n\n\n\n![](images/ggplot_penguins_gg.png)\n\n## 그래프 자동 설정\n\n작성한 테마를 매번 코드를 \"복사하여 붙여넣기\" 하여 사용하는 대신 `.Rprofile` 파일에 반영하여\n매번 `ggplot` 시각화를 할 때 사용하는 방법을 살펴보자. `usethis` 패키지 `edit_r_profile()` 함수를\n호출하여 앞서 작성한 테마를 반영한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nusethis::edit_r_profile()\n```\n:::\n\n\n`theme_penguin()` 테마를 `ggplot2` 패키지 `theme_set()`으로 설정하고 기본 색상을 정의하면 시각화 그래프에 반영하여 사용할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsuppressWarnings(suppressMessages({\n\n  extrafont::loadfonts(\"win\")\n\n\n  ## 테마 (글꼴) -----------------------------\n  theme_penguin <- function() {\n\n    # ggthemes::theme_tufte() +\n    ggplot2::theme_minimal() +\n\n      ggplot2::theme(\n        plot.title     = ggplot2::element_text(family = \"NanumSquare\", size = 18, face = \"bold\"),\n        plot.subtitle  = ggplot2::element_text(family = \"MaruBuri\", size = 13),\n        axis.title.x   = ggplot2::element_text(family = \"MaruBuri\"),\n        axis.title.y   = ggplot2::element_text(family = \"MaruBuri\"),\n        axis.text.x    = ggplot2::element_text(family = \"MaruBuri\", size = 11),\n        axis.text.y    = ggplot2::element_text(family = \"MaruBuri\", size = 11),\n        legend.title   = ggplot2::element_text(family = \"MaruBuri\", size=13),\n        plot.caption   = ggplot2::element_text(family = \"NanumSquare\", color = \"gray20\")\n      )\n  }\n\n  ## 색상\n  ### 웨스 앤더슨\n  color_palette <- wesanderson::wes_palette(\"Darjeeling1\", n = 5)\n\n  ggplot2::theme_set(theme_penguin())\n\n}))\n```\n:::\n\n\n`.Rprofile` 파일에 `ggplot()` 사용자 정의 테마가 지정되어 있기 때문에 새로 R 세션을 시작하면 \n`theme_penguin()` 테마 및 웨스 앤더스 `color_palette` 색상 팔레트도 사용할 수 있다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins_theme_gg <- penguins |> \n  ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +\n    geom_point(aes(color = species, shape = species), size = 3) +\n    geom_smooth(method = \"lm\", se = FALSE, color = \"black\")  +\n    labs(\n      title = \"물갈퀴 길이와 체중 회귀분석\",\n      subtitle = \"남극 파머 펭귄 데이터셋\",\n      x = \"물갈퀴 길이 (mm)\",\n      y = \"체중 (g)\",\n      color = \"펭귄종\",\n      caption = \"자료출처: palmerpenguins 패키지\"\n    ) +\n  guides(shape = \"none\") +\n  scale_color_manual(values =  color_palette) +\n  theme_penguin()\n\nragg::agg_jpeg(\"images/penguins_theme_gg.jpg\",\n              width = 10, height = 7, units = \"in\", res = 600)\npenguins_theme_gg\ndev.off()\n```\n:::\n\n\n![펭귄 데이터 사용자 테마 적용 그래프](images/penguins_theme_gg.jpg)\n\n",
    "supporting": [
      "themes_ggplot_files\\figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}