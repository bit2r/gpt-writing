---
output: html_document
editor_options: 
  chunk_output_type: console
editor: 
  markdown: 
    wrap: 72
---

# 쿼토 PDF

PDF는 기술적, 학술적, 사업적으로 혁신적인 문서 양식이다. PDF가 개발된
것은 오랜 역사를 자랑하지만 아래한글, 워드퍼펙트, MS 워드, 리브레 워드
등에 가려 그 진가를 발휘하지 못했다. 하지만 이제 PDF는 문서 출판의
최고봉이라는데 이의를 제기하는 사람은 없을 것이다.

PDF 를 통해 아도비(Adobe) 회사는 엄청난 성공을 이어나가고 있고, 과학기술
저작에도 필수적인 파일 형태라 PDF에 대한 기본소양은 인공지능 시대를 살고
있는 시민으로 누구나 갖춰야하는 소양이다.

### $\LaTeX$ 엔진

보통 TexLive에 기반을 둔 `tinytex` 를 사용하는데 한글을 사용하는
입장에서는 `kotex`를 설치하는 방법도 모색이 필요하다. 유니코드 문자를
처리하기 위해서 `xelatex`이 Quarto $LaTeX$ 기본엔진이다. 달리 특정하지
않게 되면 `xelatex`을 통해 CJK 문자가 포함된 PDF 파일 제작이 가능하다.

``` bash
quarto install tool tinytex
```

`kotex` 이 갖는 장점은 한글관련 이슈가 될만한 거의 모든 $LaTeX$ 패키지와
기본 한글글꼴도 내장하고 있다는 점이다. 하지만, `tidytex`를 기본 $LaTeX$
엔진으로 사용하는 경우 빠진 패키지로 인해 후속 작업이 어려운 경우
`tinytex::parse_install()` 함수를 사용하게 되면 다음과 같이 오류난
텍스트를 붙여넣게 되면 자동으로 설치해준다.

```{r}
#| eval = FALSE
tinytex::parse_install(
  text = "! LaTeX Error: File `titlepic.sty' not found."
)
```

### YAML 파일

문서를 구성하는 기본사항을 적어둔다. PDF 문서를 저작하는 것이라 $LaTeX$
에 대한 기본 지식은 Quarto PDF 문서를 생성하는데 많은 도움이 된다. 글꼴
지정관련하여 로컬 컴퓨터에 폰트 디렉토리에 관련 글꼴 정보가 운영체제와
연결되어 있어야 한다.

Pandoc 문서에 메타데이터 [variables for
LaTeX](https://pandoc.org/MANUAL.html#variables-for-latex)을 참조하여
필요한 상세설정작업을 수행한다.

``` yaml
---
title: "한글 PDF"
format: 
  pdf:
    documentclass: report
    papersize: a4
    toc: true
    toc-depth: 2
    number-sections: true
    colorlinks: true
    include-in-header: 
      text: |
        \usepackage{pdfpages} 
bibliography: bibliography.bib
link-citations: yes
csl: apa-single-spaced.csl
mainfont: "NanumMyeongjo"
sansfont: "NanumGothic"
monofont: "D2Coding"
---
```

Quarto 가 문서 변환 핵심 엔진으로 사용하고 있는 Pandoc 은 $LaTeX$ 외에도
ConTeXt, roff ms, HTML (via wkhtmltopdf) 을 사용해서 PDF 파일을 제작할
수 있다. 기존 Pandoc을 이런 방식으로 PDF 를 제작하신 분은 다음 내용을
건너뛰는 것도 좋을 듯 싶다.

### 저작

마크다운으로 이미지, 표, 텍스트, 서식, 수식 등 다양한 저작사항을 `.qmd`
파일에 담아내면 $LaTeX$ 엔진이 PDF로 변환작업을 수행해준다.

#### 이미지

$LaTeX$에 이미지도 삽입가능하다.

::: {layout-ncol="2"}
![Allison Horst 박사가 그린 펭귄 3종
도식화](images/penguin_species.png){#fig-penguins}

![펭귄 부리(bill) 변수 설명](images/culmen_depth.png){#fig-bill}
:::

#### R 코드

$LaTeX$에 R 파이썬 코드를 통해 계산된 결과를 그래프, 표, 요약통계량
등으로 뽑아내 삽입가능하다.

```{r}
#| label: fig-entire
#| fig-cap: Penguin flipper length and body mass
#| eval: false
mass_flipper <- ggplot(data = penguins,
                       aes(x = flipper_length_mm,
                           y = body_mass_g)) +
  geom_point(size = 3,
             alpha = 0.8) +
  theme_minimal() +
  labs(title = "팔머 관측소 LTER 서식 펭귄 크기",
       subtitle = "Adelie, Chinstrap, Gentoo 펭귄에 대한 물갈퀴 길이와 체질량",
       x = "물갈퀴 길이(Flipper length) (mm)",
       y = "체질량(Body mass) (g)") +
  theme_minimal()

mass_flipper
```

#### 표

$LaTeX$에 $LaTeX$ 표를 넣을 수도 있고 R 혹은 파이썬에서 나온 표를 PDF
파일에 넣을 수도 있다.

##### LaTeX 표

```{=tex}
\begin{tabular}{|l|l|}\hline
연령 & 빈도수 \\ \hline
18--25  & 15 \\
26--35  & 33 \\
36--45  & 22 \\ \hline
\end{tabular}
```
##### `gt` 표

```{r}
knitr::kable(
  mtcars[1:6, 1:10]
)
```

#### 데이터

::: {.callout-caution collapse="true"}
### 데이터 수집에 대해 궁금하신 분은 클릭하여 추가 학습하세요

팔머펭귄 데이터는 Kristen Gorman 박사와 남국 팔머 관측소(Palmer Station,
Antarctica LTER)에서 수집되어 공공에 이용가능하게 공개되었습니다.
:::

{palmerpenguins} 패키지 [@palmer-penguins]를 통해 R에서 손쉽게
이용가능하게 되었고 원데이터는 @Gorman-2014 에서 최초 공개되었다.

#### PDF 겉면

`fitpaper` $LaTeX$ 패키지를 사용해서 책 첫장(`\frontmatter`)과
마지막장(`\backmatter`) 겉면을 장식할 수 있다.

``` pdf
\includepdf[fitpaper]{book/canva-backmatter}
```

## 한글 글꼴

Quarto [PDF
Engines](https://quarto.org/docs/output-formats/pdf-engine.html)에서
$LaTeX$ 엔진을 별도 다룰 정도로 $LaTeX$ 엔진은 중요하다. Quarto 에서는
[TinyTeX](https://yihui.org/tinytex/)를 기반엔진으로 사용되는데 [TeX
Live](https://tug.org/texlive/) 배포판에 기반하고 Pandoc 에서 가장 많이
사용되는 대략 200 여개 패키지를 포함시켜 사용성은 좋게하면서 크기는 대폭
줄였다.

`.qmd` 파일 YAML 헤더에 로컬 컴퓨터에 등록된 글꼴을 지정하는 방식도
있다.

``` yaml
mainfont: "NanumMyeongjo"
sansfont: "NanumGothic"
monofont: "D2Coding"
CJKmainfont: "NanumGothic"
```

다른 방식은 글꼴 관련 사항은 `packages.tex` $TeX$ 파일에 지정하는
것이다.

``` yaml
format:
  pdf:
    include-in-header:
      - packages.tex
      - macros.tex
    include-before-body: before.tex
```

예를 들어 `packages.tex` 에 한글 글꼴을 다음과 같이 지정한다.

``` latex
% 한글 폰트 ----------------------------
\setmainhangulfont{NanumMyeongjo} % 나눔명조
\setsanshangulfont{NanumGothic}   % 나눔고딕
\setmonohangulfont{D2Coding}      % D2코딩
```

::: {.callout-note collapse="false"}
[이광춘, "글을 쓰는 것은 소프트웨어 개발이다!", 강서양천신문
특집기고('15년
9월)](https://aispiration.com/ds-authoring/ct-writing.html) 와 [LaTeX,
PDF, 문서, 그리고 사고](http://aispiration.com/latex/)에서 관련 내용을
발췌한 것임을 밝혀둡니다. 그리고, [Quarto
PDF](https://quarto.org/docs/output-formats/pdf-basics.html) 문서를 많이
참고 했습니다.
:::

## 리눅스

[Install Quarto](https://docs.posit.co/resources/install-quarto/)
웹사이트에 쿼토 설치 방법이 잘 설명되어 있다. 먼저 쉘에서 `curl`로 쿼토
설치파일을 다운로드 받는다. `gdebi-core`를 설치하고 다운로드 받은 쿼토
파일을 `gdebi` 명령어로 설치하고 나서 `quarto --version` 명령어로 설치된
쿼토 버전을 확인한다.

``` bash
$ sudo curl -LO https://quarto.org/download/latest/quarto-linux-amd64.deb
$ sudo apt-get install gdebi-core
$ sudo gdebi quarto-linux-amd64.deb
$ quarto --version
1.3.450
```

## $\LaTeX$ 설치

$Tiny\TeX$은 `TeX Live`를 기반으로 한 경량, 이식성 좋고, 사용하기 쉬운
$\LaTeX$ 배포판으로 $\LaTeX$ 설치와 관련된 일반적인 불편함을 해결하기
위해 만들어졌고, 특히 "이휘 쉬에(Yihui Xie)"가 개발하여 R과 R 마크다운
통합이 잘 되어 있다.

다른 $\LaTeX$ 배포판들이 수 기가바이트(GB)의 크기를 갖지만, $Tiny\TeX$은
설치 크기가 작고 간단한 설치 과정을 제공으로 쉽지만 미려한 문서를 원하는
사용자들에게 인기가 많다. 특히, R과의 통합도 잘 이루어져 있어, $\LaTeX$
문서를 컴파일할 때 누락된 $\LaTeX$ 패키지도 자동으로 설치해주는 기능이
많은 사랑을 받고 있다.

쿼토를 설치하면 `quarto install tinytex` 명령어로 $Tiny\TeX$을 쉽게
설치할 수 있고, 설치 정보는 `quarto tools info tinytex`으로 파악이
가능하다.

```bash
$ quarto install tinytex
Installing tinytex
[✓] Downloading TinyTex v2023.09
[✓] Unzipping TinyTeX-v2023.09.tar.gz
[✓] Moving files
[✓] Verifying tlgpg support
[✓] Default Repository: https://mirrors.rit.edu/CTAN/systems/texlive/tlnet/
Installation successful

$ quarto tools info tinytex
{
  "name": "TinyTeX",
  "installed": true,
  "version": "v2023.09",
  "directory": "/home/statkclee/.TinyTeX",
  "bin-directory": "/home/statkclee/.TinyTeX/bin/x86_64-linux",
  "configuration": {
    "status": "ok"
  }
}
```

기본적인 $\LaTeX$ 문서 구조에 표, 수식, 다이어그램, 주석을 추가한 
$\LaTeX$ 기본 문서를 작성한다.

```tex
\documentclass{article}  % 문서 클래스 지정. article은 학술 논문, 보고서 등에 적합하다.

\usepackage{tikz}  % tikz 패키지 추가. 그래픽을 그리기 위해 필요하다.

\title{fathers of the atomic bomb}  % 문서의 제목 설정
\author{Oppenheimer}  % 문서의 저자 설정
\date{\today}  % 문서의 날짜 설정. \today를 사용하여 오늘 날짜를 자동 입력한다.

\begin{document}  % 문서의 본문 시작

\maketitle  % 제목, 저자, 날짜를 출력

\section{Introduction}  % "Introduction"이라는 섹션 생성

The name "Oppenheimer"\footnote{Oppenheimer is pronounced in English as /ˈɒpənˌhaɪmər} is a German-origin surname that is most famously associated with J. Robert Oppenheimer, the American physicist known as one of the "fathers of the atomic bomb."  % 본문과 각주

\section{Table}  % "Table"이라는 섹션 생성
Below is a simple table.
\begin{center}
\begin{tabular}{|c|c|}
\hline
Header 1 & Header 2 \\  % 테이블의 헤더
\hline
Row 1, Col 1 & Row 1, Col 2 \\  % 첫 번째 행
Row 2, Col 1 & Row 2, Col 2 \\  % 두 번째 행
\hline
\end{tabular}
\end{center}  % 테이블 종료

\section{Equation}  % "Equation"이라는 섹션 생성
Here is a simple equation:
\begin{equation}  % 수식 환경 시작
  f(x) = x^2  % 수식
\end{equation}  % 수식 환경 종료

\section{Diagram}  % "Diagram"이라는 섹션 생성
Here is a simple diagram:
\begin{center}
\begin{tikzpicture}  % tikz로 그림을 그리기 시작
  \draw[->] (0,0) -- (4,0);  % x축 그리기
  \draw[->] (0,0) -- (0,4);  % y축 그리기
  \draw (0,0) -- (3,3);  % 대각선 그리기
\end{tikzpicture}
\end{center}  % 그림 환경 종료

\end{document}  % 문서의 본문 종료
```

RStudio로 $\LaTeX$을 이용해 PDF 문서를 생성할 때, 먼저 새로운 `.tex` 문서를 생성하고 표, 수식, 다이어그램, 주석이 포함된 $\LaTeX$ 코드를 복사-붙여넣는다.  RStudio의 `Compile PDF` 버튼을 클릭하여 컴파하고, 완료되면 PDF 문서가 자동으로 열린다. 

:::::{.columns}
:::{.column width=65%}
![$\LaTeX$ 문서 컴파일](images/pdf_english_rstudio.jpg)
:::

:::{.column width=5%}

:::

:::{.column width=30%}
![$\LaTeX$ 헬로월드 기본 문서](images/pdf_english.jpg)
:::
:::::


### 한글 PDF

영문 PDF를 한글로 번역하여 동일한 방식으로 PDF 파일을 만들기 위해 컴파일하게 되면 한글이 깨지거나 아무것도 없는 PDF 문서가 생성된다.

```tex
\documentclass{article}

\usepackage{tikz}

\title{원자폭탄의 아버지들}
\author{오펜하이머}
\date{\today}

\begin{document}

\maketitle

\section{소개}

"오펜하이머"라는 이름\footnote{오펜하이머는 영어로 /ˈɒpənˌhaɪmər/ 로 발음된다}은 독일 기원의 성씨로 가장 유명한 사람은 미국 물리학자 J. 로버트 오펜하이머이다. 그는 "원자폭탄의 아버지"로 알려져 있다.

\section{표}
아래는 간단한 표이다.
\begin{center}
\begin{tabular}{|c|c|}
\hline
헤더 1 & 헤더 2 \\
\hline
행 1, 열 1 & 행 1, 열 2 \\
행 2, 열 1 & 행 2, 열 2 \\
\hline
\end{tabular}
\end{center}

\section{수식}
다음은 간단한 수식이다:
\begin{equation}
  f(x) = x^2
\end{equation}

\section{다이어그램}
아래는 간단한 다이어그램이다:
\begin{center}
\begin{tikzpicture}
  \draw[->] (0,0) -- (4,0);
  \draw[->] (0,0) -- (0,4);
  \draw (0,0) -- (3,3);
\end{tikzpicture}
\end{center}

\end{document}
```

:::::{.columns}
:::{.column width=65%}

![](images/pdf_korean.jpg)
:::

:::{.column width=5%}

:::

:::{.column width=30%}
![](images/pdf_korean_rstudio.jpg)
:::

:::::

한글이 PDF 문서에 표현되지 않는 문제는 글꼴을 `.tex` 파일에 지정함으로써 해결된다. 먼저 전제조건으로 한글 글꼴(예를 들어, 나눔고딕 글꼴)이 설치되어 있고 이를 $\LaTeX$ 에서 컴파일하는 방식으로 작업한다.


```{tex}
#| source-line-numbers: "4-5"
\documentclass{article}

\usepackage{tikz}
\usepackage{fontspec}
\setmainfont{NanumGothic} % NanumGothic 글꼴이 설치되어야 함
\usepackage{tipa} % 발음기호(IPA symbols)

\title{원자폭탄의 아버지들}
\author{오펜하이머}
\date{\today}

\begin{document}

\maketitle

\section{소개}

"오펜하이머"라는 이름\footnote{오펜하이머는 영어로 \textipa{/ˈɒpənˌhaɪmər/} , \textipa{/\'{O}p@n\"{h}aIm@r/} 로 발음된다}은 독일 기원의 성씨로 가장 유명한 사람은 미국 물리학자 J. 로버트 오펜하이머이다. 그는 "원자폭탄의 아버지"로 알려져 있다.

\section{표}
아래는 간단한 표이다.
\begin{center}
\begin{tabular}{|c|c|}
\hline
헤더 1 & 헤더 2 \\
\hline
행 1, 열 1 & 행 1, 열 2 \\
행 2, 열 1 & 행 2, 열 2 \\
\hline
\end{tabular}
\end{center}

\section{수식}
다음은 간단한 수식이다:
\begin{equation}
  f(x) = x^2
\end{equation}

\section{다이어그램}
아래는 간단한 다이어그램이다:
\begin{center}
\begin{tikzpicture}
  \draw[->] (0,0) -- (4,0);
  \draw[->] (0,0) -- (0,4);
  \draw (0,0) -- (3,3);
\end{tikzpicture}
\end{center}

\end{document}

```


![$\LaTeX$에서 한글문제를 해결한 PDF 문서](images/pdf_korean_hangul.jpg)

## 로렘 입숨



