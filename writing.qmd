# 디지털 글쓰기

## 글쓰기 비교

디지털 글쓰기와 전통적인 글쓰기는 몇 가지 차이점이 있다. 
디지털 글쓰기는 검색 엔진에 의해 쉽게 찾아질 수 있도록 설계되어 있으며, 다양한 미디어가 쉽게 통합될 수 있고, 디지털 글쓰기는 발행 후에도 언제든지 쉽게 조작할 수 있어 더 동적이고 생동감을 넣을 수도 있고, [깃(Git)](https://git-scm.com/)과 같은 버전제어 도구와 연결시켜 글쓰기를 하게 되면 추적도 가능하여 재현가능한 글쓰기가 가능하게 된다. 
디지털 글쓰기의 가장 큰 장점 중의 하나는 사람만이 저작을 하는 것이 아니라 
기계가 저작한 프로그램도 글쓰기에 담을 수 있어 더욱 풍성한 글쓰기가 가능하다는 점이다.

반면 전통적인 글쓰기는 발행 후 개발이 중단될 뿐만 아니라 한정된 지면(예를 들어 A4, B5)에 다양한 색상을 넣어 강조와 가독성을 높일 수 있으나 인쇄 난이도의 증가로 인해 비용도 급격히 증가하게 되고 무엇보다 정적인 정보만 담을 수 있어 최신 기술 흐름을 반영하는데 
한계가 있다.

또한 커뮤니케이션 관점에서 보면 디지털 글쓰기는 온라인 도구를 사용하여 작성 과정의 초기부터 광범위한 청중과 거의 실시간으로 텍스트를 공유할 수 있어 작성 과정이 공개적이고 다수다
저작과정에 별다른 장벽없이 참여할 수 있다는 점에서 전통적인 글쓰기가 소수의 저자가
집필을 마무리해야 후속 디자인 작업을 비롯한 후속 출판작업이 진행된다는 면에서 큰 차이가 있다. 특히 전통 글쓰기 결과물이 책과 같은 물리적 매체에 담기게 되면 이를 다시 
디지털로 되돌리기 위해 광학문자인식(OCR) 과정을 거쳐야 하며 책속에 담긴 
그래프, 표, 이미지 등 데이터는 별도 과정을 거쳐 디지털화 해야하는 한계도 명확하다.

## 쿼토

[Quarto Guide](https://quarto.org/docs/guide/) 웹사이트에 과학기술을 위한 문서 저작에 대한 전체적인 사항이 조망되어 있다. 최근 과학기술 저작물은 다양한 출판형식과 더불어 문학적 프로그래밍(literate programming) 패러다임을 도입하고 가독성과 커뮤니케이션 강화를 위해 상호작용 인터랙티브한 기능도 내장되어 있다.

최근 과학기술 저작물은 전통적인 출판 패러다임을 떠나 급격한 변화를 경험하고 있다. 이러한 변화의 중심에는 다양한 출판 형식의 출현과 함께 문학적 프로그래밍(literate programming)이라는 새로운 패러다임의 도입이 큰 역할을 하고 있다. 문학적 프로그래밍은 코드와 설명을 결합하여 보다 이해하기 쉽고 읽기 좋은 문서를 생성하는 방식을 의미한다. 이러한 변화의 배경에는 빅데이터, 데이터 과학, 인공지능으로 이어지는 과학기술 정보 전달과 공유를 보다 효율적으로 하기 위한 필요성이 크다. 또한, 인터랙티브 상호작용 기능은 다양한 문서 가독성과 커뮤니케이션 능력을 한층 강화했다. 
인공지능 시대 R마크다운(R Markdown)이 10년 넘는 기간 동안 책(`bookdown`), 블로그(`blogdown`), 패키지 매뉴얼(`pkgdown`), PPT(`xaringan`), 대쉬보드(`flexdashboard`) 등 재현가능하고 추적가능한 과학기술 문서저작에 가능성을 보였고 이를 차세대 R마크다운이라는 별명을 갖고 있는 쿼토(Quarto)로 기존에 축적한 
지식과 경험을 좋은 점은 계승하고 인공지능시대 새로운 패러다임을 적극 도입하여 새로운 과학기술 문서저작도구로 재탄생했다.


![쿼토 개요](images/birds-eye-view.png)

### 위지윅 vs 위지윔

신속하고 빠르게 누구나 짧은 학습을 통해서 문서를 저작하고 출판할 수 있는 방식은 아래한글 혹은 MS워드 워드프로세서를 사용하는데 이는 **위지위그(WYSIWYG: What You See Is What You Get, "보는 대로 얻는다")**에 기초한 것으로 문서 편집 과정에서 화면에 포맷된 낱말, 문장이 출력물과 동일하게 나오는 방식을 말한다.
위지윅의 대척점에 있는 것이 **위지윔(WYSIWYM, What You See Is What You Mean)**으로 대표적인 것인 [\LaTeX](http://example.org) 으로 구조화된 방식으로 문서를 작성하면 컴파일을 통해서 최종 문서가 미려한 출판가능한 PDF, PS, DVI 등 확장자를 갖는 출판결과물을 얻을 수 있다.

![](images/two-paradigms.png)

#### 블로그 저작 소프트웨어

개인용 컴퓨터가 보급되면서 아래한글과 같은 워드 프로세서를 사용해서 저작을 하는 것이 일반화되었지만 곧이어 인터넷이 보급되면서 웹에 문서를 저작하는 것이 이제는 더욱 중요하게 되었다.
전문 개발자가 아닌 일반인이 HTML, CSS, JavaScript를 학습하여 웹에 문서를 제작하고 출판하는 것은 난이도가 있다보니 워드프레스와 티스토리 같은 위지위그 패러다임을 채택한 저작도구가 사용되고 있으나 상대적으로 HTML, CSS, JavaScript을 조합한 방식과 비교하여 고급스러운 면과 함께 정교함에 있어 아쉬움이 있는 것도 사실이다.

#### 워드프레스와 티스토리

![](images/blog-authoring.png)

#### HTML + CSS + 자바스크립트

![](images/blog-html-css-js.jpg)

## 재현가능 글쓰기

과학의 근본적인 원칙 중 하나는 연구의 결과가 독립적으로 재현가능해야 한다는 것이다. 
이 원칙은 연구 타당성을 확인하고, 그 결과가 일반화 가능한지 검증하는 데 필수적이다. 그러나 2010년 전후, 다양한 학문 분야에서 재현할 수 없는 연구 결과가 다수 발표됨에 따라 과학 커뮤니티 내에서 큰 우려가 발생하였고, 이러한 현상을 [**재현성 위기(Reproducibity Crisis)**](https://ko.wikipedia.org/wiki/%EC%9E%AC%ED%98%84%EC%84%B1_%EC%9C%84%EA%B8%B0)라고 부르며, 과학연구 신뢰성을 크게 훼손시켰다.

이 위기에 대응하여, 전 세계 연구자들과 전문가들은 재현가능한 연구 저작을 촉진하고 지원하기 위한 다양한 방안을 모색하기 시작했다. 연구방법론 표준화, 데이터 공유, 연구 소프트웨어 투명성 강화 등 다양한 활동이 들불처럼 일어났고, 기술 커뮤니티 형성과 더불어 다양한 도구와 플랫폼 개발을 통해 재현성 문제를 해결하고자 하는 움직임이 확산되고 있다.

데이터 과학에서 재현성은 핵심적인 요소로 간주된다. 연구 결과의 신뢰성과 타당성을 검증하는 데 있어, 다른 연구자나 전문가들이 동일한 결과를 도출할 수 있도록 연구 과정을 투명하게 공유하는 것은 필수적이다. 이러한 맥락에서 R 팩키지는 재현가능한 데이터 분석 프로젝트를 지원하는 데 중요한 역할을 한다.

![재현가능한 과학기술 문서 제작과정](images/compendium-rr.png){#fig-compendium}

특히, R 팩키지를 활용한 **연구 개요서(research compendia)**는 재현성을 강화하는 훌륭한 도구로 간주된다. 연구 개요서는 연구의 모든 요소(코드, 데이터, 출력 결과물, 환경 등)을 포괄적으로 담고 있어, 연구의 전체 과정을 투명하게 추적하고 검증할 수 있다.  한 사례로 @fig-compendium 에 코드부터 단계별로 재현가능한 과학기술 문서 제작과정을 보여주고 있다. 


## 디지털 글쓰기

글쓰기는 인류의 역사와 함께한 중요한 소통 도구로서, 그 방식과 형태는 시대별로 지속적으로 변화해왔다. 최근의 글쓰기 환경은 그 전보다 훨씬 복잡하고 다양한 요소를 요구한다. 과거에는 원고지에 텍스트를 작성하는 것만으로도 충분했다. 한글이나 영어로 이루어진 문장들은 감정을 전달하거나 사실을 나열하며, 이를 통해 독자와의 소통을 이루었다. 그러나 현대의 글쓰기 환경에서는 단순한 텍스트 정보 전달만으로는 부족하다. 이미지, 그래픽, 그리고 인터랙티브한 요소들이 텍스트와 함께 통합되어야 하며, 이를 통해 독자의 관심을 끌고 정보의 흡수를 증진시킨다.

가독성 또한 중요한 고려사항이다. 디자인적인 측면에서 효과적인 글꼴 선택은 텍스트의 내용을 더욱 돋보이게 하며, 독자의 읽기 경험을 향상시킨다. 현대의 글쓰기는 단순한 정보 전달을 넘어서, 그 과정과 결과의 재현성에도 중점을 둔다. 특히 과학연구나 기술문서에서 두드러진다. 자동화 도구와 버전 관리 시스템의 도입을 통해 재현성을 지원하고, 글쓰기 효율성과 투명성을 동시에 높이고 있다.

최근의 눈에 띄는 추세 중 하나는 인공지능 발전과 그에 따른 기계 저작물의 폭증을 들 수 있다. 기계가 작성한 텍스트를 포함한 콘텐츠가 인간 저자와 비슷하거나 오히려 생산 속도나 경제적인 면에서 확실한 우위를 보이면서 이에 대한 연구와 기술적 시도가 활발히 이루어지고 있다.

![현대의 글쓰기: 기술적 도전과 진화의 중심](images/wyswyg_ai.jpg)

## [\LaTeX](http://example.org) 철학  {#latex-philosophy}

[\LaTeX](http://example.org)은 한마디로 정의하게 되면 **"논리적인 디자인"**이라고 볼 수 있다. 저작물이 만들어지는 과정은 저작자가 원고를 손으로 쓰거나 타자기로 쳐서 출판사에 넘겨주면, 출판사의 편집디자이너는 원고를 보고 세부적인 출력형식을 결정하여 인쇄소에 넘긴다. 인쇄소는 이를 토대로 과거 식자공이 식자판을 만들었다면 현재는 컴퓨터가 파일을 만든다. [\LaTeX](http://example.org) 과 [\TeX](http://example.org) 이 하는 업무가 다소 차이가 난다. [@kim2017tex]


- [\LaTeX](http://example.org) 은 편집디자이너에 해당되는 업무를 수행
- [\TeX](http://example.org) 은 식자공에 해당되는 업무를 수행

![문서의 논리적 구조와 디자인](images/document-logical-design.png)

컴퓨터를 활용하여 전자조판을 넘긴 이유는 문서를 좀 더 읽기 쉽게 만들어 독자에게 저작자의 생각을 잘 이해시키는 것이다. 이러한 목적을 달성하기 위해서는 문서의 디자인이 그 문서의 논리적 구조를 잘 반영시켜야 하고, 반대로 문서의 논리적 구조를 잘 반영시키기 위해서는 문서 디자이너가 문서의 논리적 구조를 잘 이해해야만 된다. [\LaTeX](http://example.org)의 명령어는 기본적으로 **문서의 논리적 구조를 기술**하는 것이다. 이렇게 기술된 명령어를 [\TeX](http://example.org)으로 전달하여 조판하게 되어 원하는 최종 결과물을 얻게 된다.

[\LaTeX](http://example.org)에서 채택하는 논리적 디자인의 가장 큰 장점은 글을 더 잘 쓰게 된다는 점에 있다. [\LaTeX](http://example.org) 으로 글을 작성하게 되면 점점 [\LaTeX](http://example.org)이 채택하고 있는 논리적 디자인에 맞추게 되고 이를 통해서 글쓰기 실력이 향상된다.

아마도 [\LaTeX](http://example.org)의 가장 큰 장점은 자동화에 있다. 시각적 디자인(Wysiwig)을 채택하여 작성한 문서를 다른 형식으로 변환하거나 문서의 수식의 일련번호를 로마자에서 아라비아 숫자로 모두 변경시키거나 표나 그래프 번호를 일괄번경하는 등 이러한 사례는 자주 발견된다. 특히, 국내외 저널에 제출할 논문을 [\LaTeX](http://example.org) 으로 작성한 경우 템플릿만 바꾸면 쉽게 고품질 논문을 만들 수 있는데 워드를 이용하여 작성할 경우 수작업을 하게 되어 비생산적인 시간낭비도 크고 미려한 문서를 얻을 수도 없다.

따라서, [\LaTeX](http://example.org) 으로 글을 쓰게 되면 글쓰기 본질에 집중할 수 있어 저작자의 생각과 의견을 좀더 진솔하게 가감없이 독자에게 전달시킬 수 있게 된다.

## 시각적 디자인 {#wysiwyg}

문서를 논리적으로 디자인하는 반대 개념으로 있는 것이 **위즈윅(WSYIWIG, What You See Is What You Get)** 으로 대표적인 것이 아래한글, MS 워드와 같은 워드 프로세서다. 시각적 디자인을 하게 되면 논리적이지 못한 애매한 조판을 하기 쉽다. 또한, PDF 파일로도 출력을 할 때 미세하나마 출력물에 일관성이 실종되기도 한다.



